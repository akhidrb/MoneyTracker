spring.thymeleaf.cache=false
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
spring.jpa.show-sql=true

########################################

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
############ LOCAL #################
spring.datasource.url=jdbc:postgresql://localhost:5432/TempDB
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
############ Heroku #################
#spring.datasource.url=postgres://figiwczcrbjxuo:1928fe658ec634ee4f38e049dec31fbbecd486b6c0695242d5cf212dc5af3243@ec2-54-83-50-174.compute-1.amazonaws.com:5432/d17jqcskd5sjjh
#spring.datasource.username=figiwczcrbjxuo
#spring.datasource.password=1928fe658ec634ee4f38e049dec31fbbecd486b6c0695242d5cf212dc5af3243
##
#spring.datasource.maxActive=10
#spring.datasource.maxIdle=5
#spring.datasource.minIdle=2
#spring.datasource.initialSize=5
#spring.datasource.removeAbandoned=true
##
#spring.datasource.driver-class-name=org.postgresql.Driver
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.test-on-borrow=true
#spring.datasource.validationQuery=SELECT 1
##
#spring.datasource.time-between-eviction-runs-millis=5000
#spring.datasource.min-evictable-idle-time-millis=60000
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect